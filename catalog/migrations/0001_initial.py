# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-26 15:08
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_thumbs.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('image', django_thumbs.db.models.ImageWithThumbsField(upload_to='catalog/brands/%Y-%m-%d/')),
            ],
            options={
                'verbose_name': 'brand',
                'verbose_name_plural': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
            ],
            options={
                'verbose_name': 'color',
                'verbose_name_plural': 'colors',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
            ],
            options={
                'verbose_name': 'equipment',
                'verbose_name_plural': 'equipments',
            },
        ),
        migrations.CreateModel(
            name='Special',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('short_description', models.CharField(blank=True, max_length=124, null=True, verbose_name='short description')),
                ('description', models.TextField(verbose_name='description')),
                ('price', models.PositiveIntegerField(verbose_name='price')),
                ('best_offer', models.BooleanField(default=False, verbose_name='best offer')),
                ('video', models.CharField(blank=True, max_length=250, null=True, verbose_name='video id')),
                ('stock', models.BooleanField(default=False, verbose_name='stock')),
                ('sold', models.CharField(choices=[('1', 'Yes'), ('0', 'No')], default='0', max_length=1, verbose_name='sold')),
                ('trashed_at', models.DateTimeField(blank=True, null=True)),
                ('char_model', models.CharField(blank=True, max_length=64, null=True, verbose_name='model')),
                ('char_year_of_issue', models.PositiveSmallIntegerField(verbose_name='year of issue')),
                ('char_engine_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='engine type')),
                ('char_engine_power', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='engine power')),
                ('char_engine_capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='engine capacity')),
                ('char_gearbox_type', models.CharField(blank=True, choices=[('\u041c\u041a\u041f\u041f', 'Manual transmission'), ('\u0410\u041a\u041f\u041f', 'Automatic transmission')], max_length=64, null=True, verbose_name='gearbox type')),
                ('char_wheel_arrangement', models.CharField(blank=True, choices=[('4x2', '4x2'), ('4x4', '4x4'), ('6x4', '6x4'), ('6x6', '6x6')], max_length=64, null=True, verbose_name='wheel arrangement')),
                ('char_total_tread_residue', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='total tread residue')),
                ('char_brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.Brand', verbose_name='brand')),
                ('char_colour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Color', verbose_name='colour')),
            ],
            options={
                'verbose_name': 'special machine',
                'verbose_name_plural': 'special machines',
            },
        ),
        migrations.CreateModel(
            name='SpecialPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('image', django_thumbs.db.models.ImageWithThumbsField(upload_to='catalog/special/%Y-%m-%d/')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='catalog.Special', verbose_name='photo')),
            ],
            options={
                'verbose_name': 'photo',
                'verbose_name_plural': 'photo',
            },
        ),
        migrations.CreateModel(
            name='TractiveUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('short_description', models.CharField(blank=True, max_length=124, null=True, verbose_name='short description')),
                ('description', models.TextField(verbose_name='description')),
                ('price', models.PositiveIntegerField(verbose_name='price')),
                ('best_offer', models.BooleanField(default=False, verbose_name='best offer')),
                ('video', models.CharField(blank=True, max_length=250, null=True, verbose_name='video id')),
                ('stock', models.BooleanField(default=False, verbose_name='stock')),
                ('sold', models.CharField(choices=[('1', 'Yes'), ('0', 'No')], default='0', max_length=1, verbose_name='sold')),
                ('trashed_at', models.DateTimeField(blank=True, null=True)),
                ('char_model', models.CharField(blank=True, max_length=64, null=True, verbose_name='model')),
                ('char_year_of_issue', models.PositiveSmallIntegerField(verbose_name='year of issue')),
                ('char_mileage', models.PositiveIntegerField(blank=True, null=True, verbose_name='mileage')),
                ('char_modification', models.CharField(blank=True, max_length=64, null=True, verbose_name='modification')),
                ('char_cab_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='cab type')),
                ('char_spoiler', models.CharField(blank=True, max_length=64, null=True, verbose_name='spoiler')),
                ('char_engine_power', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='engine power')),
                ('char_engine_capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='engine capacity')),
                ('char_environmental_class', models.CharField(blank=True, max_length=64, null=True, verbose_name='environmental class')),
                ('char_gearbox_type', models.CharField(blank=True, choices=[('\u041c\u041a\u041f\u041f', 'Manual transmission'), ('\u0410\u041a\u041f\u041f', 'Automatic transmission')], max_length=64, null=True, verbose_name='gearbox type')),
                ('char_wheel_arrangement', models.CharField(blank=True, choices=[('4x2', '4x2'), ('4x4', '4x4'), ('6x4', '6x4'), ('6x6', '6x6')], max_length=64, null=True, verbose_name='wheel arrangement')),
                ('char_exhaust_brake', models.CharField(blank=True, max_length=64, null=True, verbose_name='exhaust brake')),
                ('char_suspension_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='suspension type')),
                ('char_brakes_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='brakes type')),
                ('char_abs', models.BooleanField(default=False, verbose_name='ABS')),
                ('char_ebs', models.BooleanField(default=False, verbose_name='EBS')),
                ('char_number_fuel_tanks', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='number of fuel tanks')),
                ('char_fuel_tanks_capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='fuel tanks capacity')),
                ('char_spare_wheel', models.BooleanField(default=False, verbose_name='spare wheel')),
                ('char_total_tread_residue', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='total tread residue')),
                ('char_brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.Brand', verbose_name='brand')),
                ('char_colour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Color', verbose_name='colour')),
            ],
            options={
                'verbose_name': 'tractive unit',
                'verbose_name_plural': 'tractive units',
            },
        ),
        migrations.CreateModel(
            name='TractiveUnitPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('image', django_thumbs.db.models.ImageWithThumbsField(upload_to='catalog/tractive-unit/%Y-%m-%d/')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='catalog.TractiveUnit', verbose_name='photo')),
            ],
            options={
                'verbose_name': 'photo',
                'verbose_name_plural': 'photo',
            },
        ),
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('short_description', models.CharField(blank=True, max_length=124, null=True, verbose_name='short description')),
                ('description', models.TextField(verbose_name='description')),
                ('price', models.PositiveIntegerField(verbose_name='price')),
                ('best_offer', models.BooleanField(default=False, verbose_name='best offer')),
                ('video', models.CharField(blank=True, max_length=250, null=True, verbose_name='video id')),
                ('stock', models.BooleanField(default=False, verbose_name='stock')),
                ('sold', models.CharField(choices=[('1', 'Yes'), ('0', 'No')], default='0', max_length=1, verbose_name='sold')),
                ('trashed_at', models.DateTimeField(blank=True, null=True)),
                ('char_model', models.CharField(blank=True, max_length=64, null=True, verbose_name='model')),
                ('char_year_of_issue', models.PositiveSmallIntegerField(verbose_name='year of issue')),
                ('char_mileage', models.PositiveIntegerField(blank=True, null=True, verbose_name='mileage')),
                ('char_body_capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='body capacity')),
                ('char_lift_capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='lift capacity')),
                ('char_number_axles', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='number of axles')),
                ('char_axles', models.CharField(blank=True, max_length=64, null=True, verbose_name='axles')),
                ('char_suspension_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='suspension type')),
                ('char_brakes_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='brakes type')),
                ('char_abs', models.BooleanField(default=False, verbose_name='ABS')),
                ('char_ebs', models.BooleanField(default=False, verbose_name='EBS')),
                ('char_spare_wheel', models.BooleanField(default=False, verbose_name='spare wheel')),
                ('char_total_tread_residue', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='total tread residue')),
                ('char_brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.Brand', verbose_name='brand')),
                ('char_colour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Color', verbose_name='colour')),
            ],
            options={
                'verbose_name': 'trailer',
                'verbose_name_plural': 'trailers',
            },
        ),
        migrations.CreateModel(
            name='TrailerPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('image', django_thumbs.db.models.ImageWithThumbsField(upload_to='catalog/trailer/%Y-%m-%d/')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='catalog.Trailer', verbose_name='photo')),
            ],
            options={
                'verbose_name': 'photo',
                'verbose_name_plural': 'photo',
            },
        ),
        migrations.CreateModel(
            name='TrailerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
            ],
            options={
                'verbose_name': 'trailer type',
                'verbose_name_plural': 'trailer types',
            },
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('short_description', models.CharField(blank=True, max_length=124, null=True, verbose_name='short description')),
                ('description', models.TextField(verbose_name='description')),
                ('price', models.PositiveIntegerField(verbose_name='price')),
                ('best_offer', models.BooleanField(default=False, verbose_name='best offer')),
                ('video', models.CharField(blank=True, max_length=250, null=True, verbose_name='video id')),
                ('stock', models.BooleanField(default=False, verbose_name='stock')),
                ('sold', models.CharField(choices=[('1', 'Yes'), ('0', 'No')], default='0', max_length=1, verbose_name='sold')),
                ('trashed_at', models.DateTimeField(blank=True, null=True)),
                ('char_model', models.CharField(blank=True, max_length=64, null=True, verbose_name='model')),
                ('char_year_of_issue', models.PositiveSmallIntegerField(verbose_name='year of issue')),
                ('char_mileage', models.PositiveIntegerField(blank=True, null=True, verbose_name='mileage')),
                ('char_modification', models.CharField(blank=True, max_length=64, null=True, verbose_name='modification')),
                ('char_cab_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='cab type')),
                ('char_spoiler', models.CharField(blank=True, max_length=64, null=True, verbose_name='spoiler')),
                ('char_engine_power', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='engine power')),
                ('char_engine_capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='engine capacity')),
                ('char_environmental_class', models.CharField(blank=True, max_length=64, null=True, verbose_name='environmental class')),
                ('char_gearbox_type', models.CharField(blank=True, choices=[('\u041c\u041a\u041f\u041f', 'Manual transmission'), ('\u0410\u041a\u041f\u041f', 'Automatic transmission')], max_length=64, null=True, verbose_name='gearbox type')),
                ('char_wheel_arrangement', models.CharField(blank=True, choices=[('4x2', '4x2'), ('4x4', '4x4'), ('6x4', '6x4'), ('6x6', '6x6')], max_length=64, null=True, verbose_name='wheel arrangement')),
                ('char_exhaust_brake', models.CharField(blank=True, max_length=64, null=True, verbose_name='exhaust brake')),
                ('char_body_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='exhaust brake')),
                ('char_body_capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='body capacity')),
                ('char_lift_capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='lift capacity')),
                ('char_number_axles', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='number of axles')),
                ('char_suspension_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='suspension type')),
                ('char_brakes_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='brakes type')),
                ('char_abs', models.BooleanField(default=False, verbose_name='ABS')),
                ('char_ebs', models.BooleanField(default=False, verbose_name='EBS')),
                ('char_number_fuel_tanks', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='number of fuel tanks')),
                ('char_fuel_tanks_capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='fuel tanks capacity')),
                ('char_spare_wheel', models.BooleanField(default=False, verbose_name='spare wheel')),
                ('char_total_tread_residue', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='total tread residue')),
                ('char_brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.Brand', verbose_name='brand')),
                ('char_colour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Color', verbose_name='colour')),
            ],
            options={
                'verbose_name': 'truck',
                'verbose_name_plural': 'trucks',
            },
        ),
        migrations.CreateModel(
            name='TruckPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('image', django_thumbs.db.models.ImageWithThumbsField(upload_to='catalog/truck/%Y-%m-%d/')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='catalog.Truck', verbose_name='photo')),
            ],
            options={
                'verbose_name': 'photo',
                'verbose_name_plural': 'photo',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='last modification date')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
            ],
            options={
                'verbose_name': 'vehicle type',
                'verbose_name_plural': 'vehicle types',
            },
        ),
        migrations.AddField(
            model_name='truck',
            name='char_vehicle_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.VehicleType', verbose_name='vehicle type'),
        ),
        migrations.AddField(
            model_name='truck',
            name='equipment',
            field=models.ManyToManyField(blank=True, to='catalog.Equipment', verbose_name='equipment'),
        ),
        migrations.AddField(
            model_name='truck',
            name='related',
            field=models.ManyToManyField(blank=True, related_name='_truck_related_+', to='catalog.Truck'),
        ),
        migrations.AddField(
            model_name='truck',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='trailer',
            name='char_trailer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.TrailerType', verbose_name='trailer type'),
        ),
        migrations.AddField(
            model_name='trailer',
            name='char_vehicle_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.VehicleType', verbose_name='vehicle type'),
        ),
        migrations.AddField(
            model_name='trailer',
            name='related',
            field=models.ManyToManyField(blank=True, related_name='_trailer_related_+', to='catalog.Trailer'),
        ),
        migrations.AddField(
            model_name='trailer',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='tractiveunit',
            name='char_vehicle_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.VehicleType', verbose_name='vehicle type'),
        ),
        migrations.AddField(
            model_name='tractiveunit',
            name='equipment',
            field=models.ManyToManyField(blank=True, to='catalog.Equipment', verbose_name='equipment'),
        ),
        migrations.AddField(
            model_name='tractiveunit',
            name='related',
            field=models.ManyToManyField(blank=True, related_name='_tractiveunit_related_+', to='catalog.TractiveUnit'),
        ),
        migrations.AddField(
            model_name='tractiveunit',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='special',
            name='char_vehicle_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.VehicleType', verbose_name='vehicle type'),
        ),
        migrations.AddField(
            model_name='special',
            name='related',
            field=models.ManyToManyField(blank=True, related_name='_special_related_+', to='catalog.Special'),
        ),
        migrations.AddField(
            model_name='special',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
    ]
